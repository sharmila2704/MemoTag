// File structure first:
//
// /app
//   /components
//     /layout
//       Header.jsx
//       Footer.jsx
//     /sections
//       HeroSection.jsx
//       ProblemSection.jsx
//       SolutionSection.jsx
//       TractionSection.jsx
//       CTASection.jsx
//     /ui
//       Button.jsx
//       Card.jsx
//       ContactForm.jsx
//   /lib
//     supabase.js
//   /styles
//     globals.css
//   /pages
//     index.js
//     api/contact.js
//   layout.js
//   page.js
//   globals.css

// Now let's create the actual code files:

// File: /app/page.js
import { Suspense } from 'react';
import Header from './components/layout/Header';
import Footer from './components/layout/Footer';
import HeroSection from './components/sections/HeroSection';
import ProblemSection from './components/sections/ProblemSection';
import SolutionSection from './components/sections/SolutionSection';
import TractionSection from './components/sections/TractionSection';
import CTASection from './components/sections/CTASection';

export default function Home() {
  return (
    <main className="overflow-hidden">
      <Header />
      <Suspense fallback={<div>Loading...</div>}>
        <HeroSection />
        <ProblemSection />
        <SolutionSection />
        <TractionSection />
        <CTASection />
      </Suspense>
      <Footer />
    </main>
  );
}

// File: /app/layout.js
import './globals.css';
import { Inter } from 'next/font/google';

const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'MemoTag - AI-Powered Dementia Care',
  description: 'Revolutionary AI platform for dementia diagnosis, monitoring, and care',
};

export default function RootLayout({ children }) {
  return (
    <html lang="en" className="scroll-smooth">
      <body className={`${inter.className} antialiased`}>
        {children}
      </body>
    </html>
  );
}

// File: /app/globals.css
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 255, 255, 255;
  --background-end-rgb: 245, 247, 250;
  --primary: 79, 70, 229;
  --primary-light: 224, 231, 255;
  --secondary: 236, 72, 153;
}

html {
  scroll-behavior: smooth;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer components {
  .section-padding {
    @apply py-16 md:py-24 px-4 md:px-8 lg:px-16 max-w-7xl mx-auto;
  }
  
  .heading-xl {
    @apply text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight;
  }
  
  .heading-lg {
    @apply text-3xl md:text-4xl font-bold tracking-tight;
  }
  
  .heading-md {
    @apply text-2xl md:text-3xl font-bold;
  }
  
  .paragraph {
    @apply text-base md:text-lg text-gray-600;
  }
}

// File: /app/components/layout/Header.jsx
"use client";
import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';

const Header = () => {
  const [scrolled, setScrolled] = useState(false);
  
  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 50) {
        setScrolled(true);
      } else {
        setScrolled(false);
      }
    };
    
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <motion.header 
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        scrolled ? 'bg-white shadow-md py-3' : 'bg-transparent py-5'
      }`}
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      <div className="container mx-auto flex justify-between items-center px-4 md:px-8">
        <div className="flex items-center">
          <span className="text-indigo-600 font-bold text-2xl">MemoTag</span>
        </div>
        
        <nav className="hidden md:flex items-center space-x-8">
          <a href="#problem" className="text-gray-600 hover:text-indigo-600 transition-colors">Problem</a>
          <a href="#solution" className="text-gray-600 hover:text-indigo-600 transition-colors">Solution</a>
          <a href="#traction" className="text-gray-600 hover:text-indigo-600 transition-colors">Traction</a>
          <a href="#contact" className="bg-indigo-600 text-white px-5 py-2 rounded-md hover:bg-indigo-700 transition-colors">
            Get Started
          </a>
        </nav>
        
        <div className="md:hidden">
          {/* Mobile menu button */}
          <button className="text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>
        </div>
      </div>
    </motion.header>
  );
};

export default Header;

// File: /app/components/layout/Footer.jsx
import { motion } from 'framer-motion';

const Footer = () => {
  return (
    <footer className="bg-gray-900 text-white py-12">
      <div className="container mx-auto px-4 md:px-8">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
          <div className="md:col-span-2">
            <h3 className="text-2xl font-bold mb-4">MemoTag</h3>
            <p className="text-gray-300 mb-4">
              Revolutionary AI platform transforming dementia care through early detection and continuous monitoring.
            </p>
            <div className="flex space-x-4">
              <a href="#" className="text-gray-300 hover:text-white">
                <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path fillRule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clipRule="evenodd" />
                </svg>
              </a>
              <a href="#" className="text-gray-300 hover:text-white">
                <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                </svg>
              </a>
              <a href="#" className="text-gray-300 hover:text-white">
                <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path fillRule="evenodd" d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z" clipRule="evenodd" />
                </svg>
              </a>
            </div>
          </div>
          
          <div>
            <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
            <ul className="space-y-2">
              <li><a href="#" className="text-gray-300 hover:text-white">Home</a></li>
              <li><a href="#problem" className="text-gray-300 hover:text-white">Problem</a></li>
              <li><a href="#solution" className="text-gray-300 hover:text-white">Solution</a></li>
              <li><a href="#traction" className="text-gray-300 hover:text-white">Traction</a></li>
            </ul>
          </div>
          
          <div>
            <h3 className="text-lg font-semibold mb-4">Contact</h3>
            <ul className="space-y-2">
              <li className="text-gray-300">info@memotag.io</li>
              <li className="text-gray-300">San Francisco, CA</li>
            </ul>
          </div>
        </div>
        
        <div className="mt-12 border-t border-gray-800 pt-8 flex flex-col md:flex-row justify-between items-center">
          <p className="text-gray-400 text-sm mb-4 md:mb-0">
            © {new Date().getFullYear()} MemoTag, Inc. All rights reserved.
          </p>
          <div className="flex space-x-6">
            <a href="#" className="text-gray-400 text-sm hover:text-white">Privacy Policy</a>
            <a href="#" className="text-gray-400 text-sm hover:text-white">Terms of Service</a>
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;

// File: /app/components/ui/Button.jsx
import { motion } from 'framer-motion';

const Button = ({ children, primary = true, className = "", onClick, ...props }) => {
  return (
    <motion.button
      className={`px-6 py-3 rounded-md font-medium transition-colors ${
        primary 
          ? 'bg-indigo-600 text-white hover:bg-indigo-700' 
          : 'bg-white text-indigo-600 border border-indigo-600 hover:bg-indigo-50'
      } ${className}`}
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.95 }}
      onClick={onClick}
      {...props}
    >
      {children}
    </motion.button>
  );
};

export default Button;

// File: /app/components/ui/Card.jsx
import { motion } from 'framer-motion';

const Card = ({ children, className = "", delay = 0 }) => {
  return (
    <motion.div
      className={`bg-white shadow-md rounded-xl overflow-hidden ${className}`}
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true }}
      transition={{ duration: 0.5, delay }}
    >
      {children}
    </motion.div>
  );
};

export default Card;

// File: /app/components/ui/ContactForm.jsx
"use client";
import { useState } from 'react';
import { motion } from 'framer-motion';
import Button from './Button';

const ContactForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    role: 'caregiver',
    message: ''
  });
  const [status, setStatus] = useState({ type: '', message: '' });
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    setStatus({ type: '', message: '' });
    
    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });
      
      const data = await response.json();
      
      if (response.ok) {
        setStatus({ type: 'success', message: 'Thank you for your message! We\'ll get back to you soon.' });
        setFormData({ name: '', email: '', role: 'caregiver', message: '' });
      } else {
        throw new Error(data.message || 'Something went wrong. Please try again.');
      }
    } catch (error) {
      setStatus({ type: 'error', message: error.message });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <motion.form 
      onSubmit={handleSubmit}
      className="bg-white rounded-xl shadow-lg p-6 md:p-8"
      initial={{ opacity: 0 }}
      whileInView={{ opacity: 1 }}
      viewport={{ once: true }}
      transition={{ duration: 0.5 }}
    >
      <div className="mb-4">
        <label htmlFor="name" className="block text-gray-700 mb-2">Full Name</label>
        <input
          type="text"
          id="name"
          name="name"
          value={formData.name}
          onChange={handleChange}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          required
        />
      </div>
      
      <div className="mb-4">
        <label htmlFor="email" className="block text-gray-700 mb-2">Email Address</label>
        <input
          type="email"
          id="email"
          name="email"
          value={formData.email}
          onChange={handleChange}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          required
        />
      </div>
      
      <div className="mb-4">
        <label htmlFor="role" className="block text-gray-700 mb-2">I am a:</label>
        <select
          id="role"
          name="role"
          value={formData.role}
          onChange={handleChange}
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
        >
          <option value="caregiver">Caregiver</option>
          <option value="healthcare-professional">Healthcare Professional</option>
          <option value="investor">Investor</option>
          <option value="other">Other</option>
        </select>
      </div>
      
      <div className="mb-6">
        <label htmlFor="message" className="block text-gray-700 mb-2">Message</label>
        <textarea
          id="message"
          name="message"
          value={formData.message}
          onChange={handleChange}
          rows="4"
          className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
          required
        ></textarea>
      </div>
      
      {status.message && (
        <div className={`p-4 mb-6 rounded-md ${status.type === 'success' ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'}`}>
          {status.message}
        </div>
      )}
      
      <Button type="submit" disabled={isSubmitting} className="w-full">
        {isSubmitting ? 'Sending...' : 'Send Message'}
      </Button>
    </motion.form>
  );
};

export default ContactForm;

// File: /app/components/sections/HeroSection.jsx
"use client";
import { motion } from 'framer-motion';
import Button from '../ui/Button';

const HeroSection = () => {
  return (
    <section className="pt-32 pb-20 md:pt-40 md:pb-32 bg-gradient-to-b from-indigo-50 to-white relative overflow-hidden">
      <div className="container mx-auto px-4 md:px-8 flex flex-col md:flex-row items-center">
        <motion.div 
          className="md:w-1/2 mb-12 md:mb-0 text-center md:text-left"
          initial={{ opacity: 0, x: -50 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.7 }}
        >
          <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-4 leading-tight">
            AI for <span className="text-indigo-600">Dementia Care</span>
          </h1>
          <p className="text-lg md:text-xl text-gray-700 mb-8 max-w-lg mx-auto md:mx-0">
            Revolutionizing early detection and continuous monitoring for better quality of life and improved patient outcomes.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center md:justify-start">
            <Button>
              Get Started
            </Button>
            <Button primary={false}>
              Learn More
            </Button>
          </div>
        </motion.div>
        
        <motion.div 
          className="md:w-1/2"
          initial={{ opacity: 0, x: 50 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.7, delay: 0.2 }}
        >
          {/* SVG Animation Placeholder */}
          <div className="relative w-full aspect-square max-w-lg mx-auto">
            <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg" className="w-full h-full">
              <motion.path
                fill="#4f46e5"
                d="M44.7,-76.4C58.8,-69.2,71.8,-59.1,79.6,-45.8C87.4,-32.6,89.9,-16.3,88.6,-0.8C87.2,14.7,82,29.4,74.4,43.5C66.8,57.7,56.8,71.3,43.3,79.1C29.8,87,14.9,89.1,0.7,87.9C-13.6,86.8,-27.1,82.4,-39.7,75.3C-52.2,68.1,-63.7,58.2,-70.8,45.8C-78,33.3,-80.9,16.7,-81.5,-0.3C-82,-17.3,-80.1,-34.7,-72.2,-49C-64.2,-63.4,-50.2,-74.8,-35.4,-81.4C-20.7,-88,-10.3,-89.8,2.7,-94.5C15.8,-99.1,31.6,-106.7,44.7,-76.4Z"
                transform="translate(100 100)"
                animate={{
                  d: [
                    "M44.7,-76.4C58.8,-69.2,71.8,-59.1,79.6,-45.8C87.4,-32.6,89.9,-16.3,88.6,-0.8C87.2,14.7,82,29.4,74.4,43.5C66.8,57.7,56.8,71.3,43.3,79.1C29.8,87,14.9,89.1,0.7,87.9C-13.6,86.8,-27.1,82.4,-39.7,75.3C-52.2,68.1,-63.7,58.2,-70.8,45.8C-78,33.3,-80.9,16.7,-81.5,-0.3C-82,-17.3,-80.1,-34.7,-72.2,-49C-64.2,-63.4,-50.2,-74.8,-35.4,-81.4C-20.7,-88,-10.3,-89.8,2.7,-94.5C15.8,-99.1,31.6,-106.7,44.7,-76.4Z",
                    "M46.7,-79.9C60.6,-71.8,72.3,-59.7,80.1,-45.2C87.9,-30.7,91.9,-15.4,89.6,-1.3C87.4,12.7,79,25.4,70.2,38.5C61.4,51.6,52.2,65.1,39.7,74.1C27.1,83.1,11.1,87.6,-3.9,85.1C-18.9,82.6,-32.9,73.1,-45.7,63C-58.6,52.9,-70.3,42.3,-78.2,28.9C-86.1,15.5,-90.2,-0.8,-88,-16.2C-85.8,-31.6,-77.3,-46.2,-65.5,-56.8C-53.7,-67.4,-38.6,-74,-23.9,-76.5C-9.3,-79,4.8,-77.3,19.8,-78C34.9,-78.7,49.9,-81.8,46.7,-79.9Z",
                    "M44.7,-76.4C58.8,-69.2,71.8,-59.1,79.6,-45.8C87.4,-32.6,89.9,-16.3,88.6,-0.8C87.2,14.7,82,29.4,74.4,43.5C66.8,57.7,56.8,71.3,43.3,79.1C29.8,87,14.9,89.1,0.7,87.9C-13.6,86.8,-27.1,82.4,-39.7,75.3C-52.2,68.1,-63.7,58.2,-70.8,45.8C-78,33.3,-80.9,16.7,-81.5,-0.3C-82,-17.3,-80.1,-34.7,-72.2,-49C-64.2,-63.4,-50.2,-74.8,-35.4,-81.4C-20.7,-88,-10.3,-89.8,2.7,-94.5C15.8,-99.1,31.6,-106.7,44.7,-76.4Z",
                  ],
                }}
                transition={{
                  repeat: Infinity,
                  repeatType: "reverse",
                  duration: 10,
                }}
              />
              <motion.g
                transform="translate(100, 100)"
                initial={{ scale: 0.8, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ delay: 0.5, duration: 1 }}
              >
                <motion.circle
                  cx="0"
                  cy="0"
                  r="30"
                  fill="white"
                  stroke="#4f46e5"
                  strokeWidth="4"
                />
                <motion.path
                  d="M-15,0 L-5,10 L15,-10"
                  fill="none"
                  stroke="#4f46e5"
                  strokeWidth="4"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  initial={{ pathLength: 0 }}
                  animate={{ pathLength: 1 }}
                  transition={{ delay: 1, duration: 0.8 }}
                />
              </motion.g>
            </svg>
          </div>
        </motion.div>
      </div>
      
      {/* Floating elements for visual interest */}
      <motion.div
        className="absolute top-1/4 left-1/6 w-12 h-12 rounded-full bg-purple-100"
        animate={{
          y: [0, -15, 0],
          opacity: [0.3, 0.6, 0.3],
        }}
        transition={{
          duration: 3,
          repeat: Infinity,
          repeatType: "reverse",
        }}
      />
      <motion.div
        className="absolute bottom-1/4 right-1/6 w-20 h-20 rounded-full bg-indigo-100"
        animate={{